# colors
set -g default-terminal "screen-256color"

# mouse 
setw -g mode-mouse off 
set -g mouse-select-pane off 
set -g mouse-resize-pane off 
set -g mouse-select-window off

# ^a
set -g prefix C-a  
unbind C-b 
# ^a^a sends ^a
bind C-a send-prefix

# reload
bind r source-file ~/.tmux.conf \; display "let's roll"

# start at 1
set -g base-index 1
setw -g pane-base-index 1

# delay vim fix (not sure if I need 1 or 0)
set -s escape-time 0

# window selection
unbind-key 1        ; bind-key 1        select-window -t 1
unbind-key 2        ; bind-key 2        select-window -t 2
unbind-key 3        ; bind-key 3        select-window -t 3
unbind-key 4        ; bind-key 4        select-window -t 4
unbind-key 5        ; bind-key 5        select-window -t 5
unbind-key 6        ; bind-key 6        select-window -t 6
unbind-key 7        ; bind-key 7        select-window -t 7
unbind-key 8        ; bind-key 8        select-window -t 8
unbind-key 9        ; bind-key 9        select-window -t 9
unbind-key 0        ; bind-key 0        select-window -t 10
unbind-key M-1      ; bind-key -n M-1   select-window -t 1
unbind-key M-2      ; bind-key -n M-2   select-window -t 2
unbind-key M-3      ; bind-key -n M-3   select-window -t 3
unbind-key M-4      ; bind-key -n M-4   select-window -t 4
unbind-key M-5      ; bind-key -n M-5   select-window -t 5
unbind-key M-6      ; bind-key -n M-6   select-window -t 6
unbind-key M-7      ; bind-key -n M-7   select-window -t 7
unbind-key M-8      ; bind-key -n M-8   select-window -t 8
unbind-key M-9      ; bind-key -n M-9   select-window -t 9
unbind-key M-0      ; bind-key -n M-0   select-window -t 10

# window splitting
unbind-key M--      ; bind-key -n M--   split-window -v
unbind-key M-\      ; bind-key -n M-\   split-window -h
unbind-key \        ; bind-key \        split-window -h
unbind-key |        ; bind-key |        split-window -h
unbind-key -        ; bind-key -        split-window -v

# pane movement
unbind-key M-h      ; bind-key -n M-h      select-pane -L
unbind-key M-k      ; bind-key -n M-k      select-pane -U
unbind-key M-j      ; bind-key -n M-j      select-pane -D
unbind-key M-l      ; bind-key -n M-l      select-pane -R

# powerline!!
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/dotfiles/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/dotfiles/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# set the status line's colors
set -g status-fg white
set -g status-bg colour235

# pane colors
set -g pane-border-fg colour234
set -g pane-border-bg colour233

# active pane colors
set -g pane-active-border-fg colour23
set -g pane-active-border-bg colour23

# command line colors
set -g message-fg cyan
set -g message-bg colour24
set -g message-attr bright

############################
#---below comes from book---
############################

# pane resizing
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# enable vi keys.
setw -g mode-keys vi

##### BELOW ONLY NEEDED FOR OSX ################################
# Open panes in the same directory using the tmux-panes script 
#unbind v
#unbind n
#bind v send-keys " ~/tmux-panes -h" C-m
#bind n send-keys " ~/tmux-panes -v" C-m
#################################################################

# Maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# command / message line
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright

# Status line left side
#set -g status-left-length 40 
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

#set -g status-utf8 on

# Status line right side
# 15% | 28 Nov 18:15
#set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# Update the status bar every sixty seconds
#set -g status-interval 60

# Center the window list
#set -g status-justify centre


# set the color of the window list
#setw -g window-status-fg cyan 
#setw -g window-status-bg colour235
#setw -g window-status-attr dim

# set colors for the active window
#setw -g window-status-current-fg white 
#setw -g window-status-current-bg red 
#setw -g window-status-current-attr bright

# pane colors
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow
